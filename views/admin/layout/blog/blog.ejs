<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" conent="width=device-width, initial-scale=1.0" />
  <title>Blog Manager | The Window Knight</title>
  <link rel="stylesheet" href="/assets/css/admin/dashboard.css" />
  <link rel="stylesheet" href="/assets/css/admin/blog.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
</head>

<body>
  <header>
    <h1>Window Knight Admin</h1>
    <div class="profile-dropdown">
      <i class="fas fa-user-circle fa-2x"></i>
      <div class="profile-dropdown-content">
        <a href="/">Main Site</a>
        <a href="#">Change Password</a>
        <a href="#">Download Data</a>
        <a href="/logout">Logout</a>
      </div>
    </div>
  </header>
    <div class="popup hidden" id="popupMessage"></div>
  <div class="dashboard-container">
    <nav>
      <a href="/admin/emailer"><i class="fas fa-envelope"></i> Emailer</a>
      <a href="/admin/blogger"><i class="fas fa-pen-nib"></i> Blogger</a>
      <a href="#"><i class="fas fa-calendar-alt"></i> Scheduler</a>
      <a href="#"><i class="fas fa-chart-line"></i> Sales</a>
      <a href="#"><i class="fas fa-file-invoice-dollar"></i> Online Quotes</a>
      <a href="#"><i class="fas fa-wallet"></i> Finances</a>
      <a href="#"><i class="fas fa-brain"></i> AI Journal</a>
      <a href="#"><i class="fas fa-image"></i> Image Uploader</a>
      <a href="/admin/prospect"><i class="fas fa-plug"></i> Prospects</a>
    </nav>

    <main class="main-section">
      <div class="blog-header">
        <h2>Blog Manager</h2>
      </div>

      <div class="dashboard-grid">
        <!-- Add Blog Button Card -->
        <div class="card add-blog" onclick="openModal()">
          <div class="add-icon">+</div>
          <p>Add Blog</p>
        </div>
        <!-- Blog Cards -->
        <% if (blogs && blogs.length > 0) { %>
        <% blogs.forEach(blog => { %>
           <div class="blog-card blog-card--inst" data-id="<%= blog._id %>">
              <img src="/uploads/<%=blog.coverImage %>" alt="Blog Cover" />
            <div class="blog-content">
              <h3><%= blog.title %></h3>

              <p><%= blog.body.length > 100 ? blog.body.substring(0, 100) + '...' : blog.summary %></p>

              <div class="blog-actions">
                <button class="edit-btn btn" data-id = "<%= blog._id %>" onclick='editBlog(this)'>Edit</button>
                <button class="delete-btn btn" data-id="<%= blog._id %>">Delete</button>
                <button class="open-btn btn" data-id="<%= blog._id %>">Open</button>

              </div>
            </div>

          </div>
        <% }) %>
      <% } else { %>
        <p>No blog posts found.</p>
      <% } %>
      </div>
    </main>
  </div>

  <div class="blog-modal hidden" id="blogWizard">
  <div class="blog-modal-content">
    <span class="blog-close" onclick="closeModal()">&times;</span>
    <h2>Create Blog</h2>
    <div class="blog-progress">
      <div class="blog-progress-step step-1 active"></div>
      <div class="blog-progress-step step-2"></div>
      <div class="blog-progress-step step-3"></div>
    </div>
    <form id="blogForm">
      <div class="blog-form-section active" data-step="1">
        <label>Author <input type="text" placeholder="Enter Author of Blog" name="author" required></label>
        <label>Title <input placeholder="Enter Title of Blog" type="text" name="title" required></label>
        <label>Subtitle <input placeholder="Enter Subtitle of Blog" type="text" name="subtitle" required></label>
        <button type="button" class="blog-btn" onclick="nextStep()">Next</button>
      </div>
      <div class="blog-form-section" data-step="2">
        <label>Cover Image
          <div class="blog-upload-circle" onclick="document.getElementById('coverInput').click()">Upload Cover</div>
          <input type="file" id="coverInput" name="cover" accept="image/*" style="display:none" onchange="previewImage(event, 'coverPreview')">
          <div class="blog-image-preview-grid" id="coverPreview"></div>
        </label>
        <label>Gallery Images
          <div class="blog-upload-circle" onclick="document.getElementById('galleryInput').click()">Upload Gallery</div>
          <input type="file" id="galleryInput" name="gallery" accept="image/*" multiple style="display:none" onchange="previewImage(event, 'galleryPreview', true)">
          <div class="blog-image-preview-grid" id="galleryPreview"></div>
        </label>
        <button type="button" class="blog-btn back" onclick="backStep()">Back</button>
        <button type="button" class="blog-btn" onclick="nextStep()">Next</button>

      </div>
      <div class="blog-form-section" data-step="3">
        <div class="blog-editor-wrapper">
          <button class="blog-ai-btn" type="button"  onclick="openAiModal()">ü§ñ AI Generate</button>
          <label>Blog Content (HTML)
            <textarea class="blog-html-input" name="html" placeholder="Write blog content with HTML..."></textarea>
          </label>
        </div>
        <button type="button" class="blog-btn back" onclick="backStep()">Back</button>
        <button type="submit" class="blog-btn">Submit Blog</button>
      </div>
    </form>
  </div>
</div>

<div class="ai-modal-wrapper hidden" id="aiModalBox">
  <div class="ai-modal-box">
    <span class="ai-modal-close" onclick="closeAiModal()">&times;</span>
    <h2 class="ai-modal-title">Ask AI to Write or Improve</h2>
    <textarea id="aiInputPrompt" class="ai-modal-textarea" placeholder="e.g., Make this blog more exciting and useful for homeowners."></textarea>
    <button class="ai-modal-submit-btn" onclick="submitAiPromptToEditor()">Submit Prompt</button>
  </div>
</div>

<!-- Loader Overlay -->
<div class="ai-loader-overlay" id="aiLoader">
  <div class="ai-loader-circle"></div>
</div>

<!-- Popup Message -->
<div class="ai-popup-message" id="aiPopup">AI response received.</div>

  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script>
    function openModal() {
      document.getElementById('blogWizard').classList.remove('hidden');
      document.getElementById('coverInput').dataset.hasExisting = 'false';
document.getElementById('galleryInput').dataset.hasExisting = 'false';
    }

    function closeModal() {
      document.getElementById('blogWizard').classList.add('hidden');
    }

    function deleteBlog(id) {
      axios.delete(`/admin/blogger/delete/${id}`).then(() => {
        document.getElementById(`blog-${id}`).remove();
      }).catch(err => alert('Failed to delete.'));
    }

    document.getElementById('blogForm').addEventListener('submit', async function(e) {

      e.preventDefault();

      const form = e.target;
      const formData = new FormData(form);
      const editingId = form.dataset.editing;

      try {

        const endpoint = editingId ? `/admin/blogger/edit/${editingId}` : '/admin/blogger/add';

        const response = await axios.post(endpoint, formData, {
          headers: { 'Content-Type': 'multipart/form-data' }
        });

        if (response.data.success) {
          showPopup(editingId ? "‚úÖ Blog updated successfully!" : "‚úÖ Blog posted successfully!");
          setTimeout(() => location.reload(), 1500);
        }
        else {
          showPopup("‚ö†Ô∏è " + (response.data.message || "Something went wrong."));
        }

      } catch (err) {
        console.error(err);
        showPopup("‚ùå Failed to submit blog. " + err);
      }

  });

  function showPopup(message) {
    const popup = document.getElementById('popupMessage');
    popup.textContent = message;
    popup.classList.add('show');
    popup.classList.remove('hidden');
    setTimeout(() => popup.classList.remove('show'), 3000);
  }

  </script>

  <script>


async function submitAIPrompt() {
const prompt = document.getElementById('aiPrompt').value;

// Get current form values
const title = document.querySelector('[name="title"]').value;
const subtitle = document.querySelector('[name="subtitle"]').value;
const body = document.querySelector('[name="html"]').value;

const aiRequest = {
  prompt,
  existing: { title, subtitle, body }
};

try {
  const res = await axios.post('/admin/blogger/ai-generate', aiRequest);

  if (res.data.success) {
    const { title, subtitle, body } = res.data;
    document.querySelector('[name="title"]').value = title;
    document.querySelector('[name="subtitle"]').value = subtitle;
    document.querySelector('[name="html"]').value = body;
    showPopup("‚úÖ AI blog generated!");
  } else {
    showPopup("‚ö†Ô∏è AI failed: " + res.data.message);
  }
  closeAIBotModal();
} catch (err) {
  console.error("AI Request failed:", err);
  showPopup("‚ùå AI error.");
}
}


let step = 1;
function nextStep() {
  if (step === 1) {
    const author = document.querySelector('[name="author"]').value.trim();
    const title = document.querySelector('[name="title"]').value.trim();
    const subtitle = document.querySelector('[name="subtitle"]').value.trim();
    if (!author || !title || !subtitle) {
      showPopup("‚ö†Ô∏è Please fill out Author, Title, and Subtitle.");
      return;
    }
  }
  if (step === 2) {
    const hasCover = coverInput.files.length > 0 || coverInput.dataset.hasExisting === 'true';
    const cover = document.getElementById('coverInput').files.length;
    if (!hasCover) {
      showPopup("‚ö†Ô∏è Please upload a cover image.");
      return;
    }
  }
  document.querySelector(`.blog-form-section[data-step="${step}"]`).classList.remove('active');
  document.querySelector(`.step-${step}`).classList.remove('active');
  step++;
  document.querySelector(`.blog-form-section[data-step="${step}"]`).classList.add('active');
  document.querySelector(`.step-${step}`).classList.add('active');
}

function backStep() {
  document.querySelector(`.blog-form-section[data-step="${step}"]`).classList.remove('active');
  document.querySelector(`.step-${step}`).classList.remove('active');
  step--;
  document.querySelector(`.blog-form-section[data-step="${step}"]`).classList.add('active');
  document.querySelector(`.step-${step}`).classList.add('active');
}
 function closeModal() {
   document.getElementById('blogWizard').classList.add('hidden');
 }

 function previewImage(event, containerId, multiple = false) {
   const files = event.target.files;
   const container = document.getElementById(containerId);
   container.innerHTML = '';
   for (let file of files) {
     const reader = new FileReader();
     reader.onload = e => {
       const img = document.createElement('img');
       img.src = e.target.result;
       container.appendChild(img);
     };
     reader.readAsDataURL(file);
     if (!multiple) break;
   }
 }
 async function submitAIPrompt() {
   const prompt = document.getElementById('aiPrompt').value;
   const title = document.querySelector('[name="title"]').value;
   const subtitle = document.querySelector('[name="subtitle"]').value;
   const aiRequest = { prompt, existing: { title, subtitle, body: '' } };

   try {
     const res = await axios.post('/admin/blogger/ai-generate', aiRequest);
     if (res.data.success) {
       document.querySelector('[name="html"]').value = res.data.body;
     }
     closeAIBotModal();
   } catch (err) {
     console.error("AI Error:", err);
   }

 }

 function openAiModal() {
  document.getElementById('aiModalBox').classList.remove('hidden');
}

function closeAiModal() {
  document.getElementById('aiModalBox').classList.add('hidden');
}

function showAiLoader(show = true) {
  document.getElementById('aiLoader').style.display = show ? 'flex' : 'none';
}

function showAiPopup(message) {
  const popup = document.getElementById('aiPopup');
  popup.textContent = message;
  popup.classList.add('show');
  setTimeout(() => popup.classList.remove('show'), 3000);
}

async function submitAiPromptToEditor() {
  const prompt = document.getElementById('aiInputPrompt').value;
  const title = document.querySelector('[name="title"]').value;
  const subtitle = document.querySelector('[name="subtitle"]').value;
  const htmlArea = document.querySelector('[name="html"]');
  const payload = { prompt, existing: { title, subtitle, body: htmlArea.value } };

  try {
    showAiLoader(true);
    const res = await axios.post('/admin/blogger/ai-generate', payload);
    if (res.data.success) {
      console.log(res.data);
      console.log(res)
      htmlArea.value = res.data.body;
      showAiPopup('‚úÖ Blog content updated with AI!');
      showAiLoader(false);
    } else {
      showAiPopup('‚ö†Ô∏è AI error: ' + (res.data.message || 'Unknown error'));
          showAiLoader(false);
    }
  }
  catch (err) {
    console.error(err);
    showAiPopup('‚ùå Failed to contact AI service');
  }
  finally {
    showAiLoader(false);
    closeAiModal();
  }

}

const deleteBtns = document.querySelectorAll(".delete-btn");

deleteBtns.forEach((btn) => {

  btn.addEventListener("click", async (e) => {

    const _id = e.target.dataset.id;

    if (!_id) return alert("Blog ID not found.");

    try {
      const { data } = await axios.delete("/api/blog/delete/one", { data: { _id } });

      if (!data._id) {
        console.error(data.err);
        alert("Could not delete blog.");
        return;
      }

      const blogCards = document.querySelectorAll(".blog-card");

      blogCards.forEach((card) => {
        if (card.dataset.id === data._id) {
          card.remove();
        }
      });
    }
    catch (err) {
      console.error("Delete failed:", err);
      alert("Something went wrong.");
    }

  });

});

async function editBlog(button) {
  const blogCard = button.closest(".blog-card");
  console.log(blogCard.getAttribute("data-id"))
  const {data} = await axios.get(`/api/blog/one/${blogCard.getAttribute("data-id")}`);
  var blog = data.blog;
  document.querySelector('[name="author"]').value = blog.author || '';
  document.querySelector('[name="title"]').value = blog.title || '';
  document.querySelector('[name="subtitle"]').value = blog.subtitle || '';
  document.querySelector('[name="html"]').value = blog.body || '';
  const coverInput = document.getElementById('coverInput');
  const galleryInput = document.getElementById('galleryInput');

  coverInput.dataset.hasExisting = 'true';
  galleryInput.dataset.hasExisting = blog.gallery && blog.gallery.length > 0 ? 'true' : 'false';

  const coverPreview = document.getElementById('coverPreview');
  coverPreview.innerHTML = `<img src="/uploads/${blog.coverImage}" alt="Cover Image" />`;

  const galleryPreview = document.getElementById('galleryPreview');
  galleryPreview.innerHTML = (blog.gallery || []).map(img => `<img src="/uploads/${img}" />`).join('');

  document.getElementById('blogWizard').classList.remove('hidden');
  document.getElementById('blogForm').dataset.editing = blog._id;
  step = 1;
  document.querySelectorAll('.blog-form-section').forEach(el => el.classList.remove('active'));
  document.querySelector('[data-step="1"]').classList.add('active');
  document.querySelectorAll('.blog-progress-step').forEach(el => el.classList.remove('active'));
  document.querySelector('.step-1').classList.add('active');
}

var blog_cards = document.querySelectorAll(".blog-card");

for(var i =0; i < blog_cards.length;i++){
  blog_cards[i].addEventListener("click",(e)=>{
    const blogCard = e.target.closest(".open-btn");
    var _id = blogCard.getAttribute("data-id");
    console.log(e.target)
    window.open("/blog/"+_id);
  })
}

  </script>
</body>
</html>
